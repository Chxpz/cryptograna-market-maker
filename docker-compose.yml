version: '3.8'

services:
  bot:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - HELIUS_API_KEY=${HELIUS_API_KEY}
      - JUPITER_API_KEY=${JUPITER_API_KEY}
      - ORCA_API_KEY=${ORCA_API_KEY}
      - REDIS_URL=redis://redis:6379
      - QDRANT_URL=http://qdrant:6333
      - POSTGRES_URL=postgresql://postgres:postgres@postgres:5432/market_bot
      - PROMETHEUS_URL=http://prometheus:9090
      - HUMMINGBOT_URL=http://hummingbot:9000
      - HUMMINGBOT_API_KEY=${HUMMINGBOT_API_KEY}
    depends_on:
      - redis
      - qdrant
      - postgres
      - prometheus
      - hummingbot
    volumes:
      - ./src:/app/src
      - ./config:/app/config
    networks:
      - bot_network

  hummingbot:
    image: hummingbot/hummingbot:latest
    environment:
      - CONFIG_PASSWORD=${HUMMINGBOT_PASSWORD}
      - CONFIG_PASSPHRASE=${HUMMINGBOT_PASSPHRASE}
      - CONFIG_API_KEY=${HUMMINGBOT_API_KEY}
    volumes:
      - ./hummingbot/conf:/conf
      - ./hummingbot/conf/connectors:/conf/connectors
      - ./hummingbot/conf/strategies:/conf/strategies
      - ./hummingbot/logs:/logs
      - ./hummingbot/data:/data
      - ./hummingbot/scripts:/scripts
    ports:
      - "9000:9000"
    networks:
      - bot_network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bot_network

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - bot_network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=market_bot
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - bot_network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - bot_network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - bot_network

volumes:
  redis_data:
  qdrant_data:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  bot_network:
    driver: bridge 